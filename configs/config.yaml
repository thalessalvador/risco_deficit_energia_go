seed: 42

paths:
  raw_dir: "data/raw"
  proc_dir: "data/processed"
  features_dir: "data/features"
  models_dir: "models"
  reports_dir: "reports"

download:
  since: "2022"             # Baixar dados a partir deste ano (ex.: "2022" ou "2022-01")

problem:
  horizon: "weekly"           # semanal é o padrão do projeto
  target_name: "classe_risco" # "baixo" | "medio" | "alto"
  forecast_horizon_weeks: 1    # horizonte de previsão T+1 semana (0 = nowcast)

  # Regras de rotulagem (quantis da margem + ajustes)
  label_rules:
    coluna_margem: "margem_suprimento_min_w"
    q_baixo: 0.10            # <= → "alto"
    q_medio: 0.40            # (q_baixo, q_medio] → "medio"; > → "baixo"

    # Ajuste por cortes (interpretação: superávit/indisponibilidade de escoamento)
    curtail_downgrade:
      usar_downgrade_cortes: true  # Ativa o rebaixamento do risco em 1 nível quando houver cortes renováveis relevantes.
      corte_ratio_thr: 0.05        # Limiar da razão semanal cortes/(cortes+geração) renovável para acionar o ajuste (0.05 = 5%).
      requer_saldo_importador_nao_positivo: true  # Se true, só aplica quando o saldo importador semanal <= 0 (sem importação líquida).

    # Ajuste hidrológico (estiagem)
    usar_override_hidro: true
    coluna_ear: "ear_pct_mean_w"
    coluna_ena: "ena_mwmed_mean_w"
    ear_q_baixo: 0.20        # EAR abaixo do Q20 → "alto"
    ena_q_baixo: 0.20        # ENA abaixo do Q20 por 2 semanas seguidas → "alto"
    janelas_consecutivas_ena: 2

aggregation:
  freq: "W"                  # semanal
  features:
    # agregações de diário→semanal
    daily_aggs: ["mean", "sum", "max", "min", "std", "p95", "p05"]
    # lags e janelas móveis semanais
    lags_weeks: [1, 2, 4]
    rolling_weeks: [2, 4]

modeling:
  metrics: ["f1_macro", "balanced_accuracy"]
  cv:
    type: "TimeSeriesSplit"
    n_splits: 5
  models:
    - name: "logreg"
      type: "logistic_regression"
      params:
        class_weight: "balanced"
        max_iter: 1000
        n_jobs: -1
    - name: "xgb"
      type: "xgboost"
      params:
        n_estimators: 400
        learning_rate: 0.05
        max_depth: 4
        subsample: 0.9
        colsample_bytree: 0.8
        num_class: 3
        eval_metric: "mlogloss"

output:
  top_k_features: 25
